name: Build OpenWrt Auto

on:
  repository_dispatch:
    types:
      - Build-Openwrt
  workflow_dispatch:

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  CONFIG_FILE: .config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai
  INFO_SH: hwinfo

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Check server information
      run: |
        chmod +x $INFO_SH
        ./$INFO_SH

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(cat denpends_ubuntu_2004)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Load custom feeds
      run: |
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH
        echo "COMPILE_DATE=$(date +%y.%m.%d)" >> ${GITHUB_ENV}

    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "status=success" >> ${GITHUB_OUTPUT}
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> ${GITHUB_ENV}
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> ${GITHUB_ENV}

    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: Organize files
      id: organize
      if: ${{ env.UPLOAD_FIRMWARE }} == 'true' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> ${GITHUB_ENV}
        echo "status=success" >> ${GITHUB_OUTPUT}

    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: ${{ steps.organize.outputs.status }} == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: Package Armvirt as OpenWrt
      uses: ffuqiangg/openwrt_packit@master
      env:
        SCRIPT_REPO_URL: https://github.com/ffuqiangg/openwrt_packit
        OPENWRT_ARMVIRT: openwrt/bin/targets/*/*/*.tar.gz
        PACKAGE_SOC: s905d
        KERNEL_REPO_URL: https://github.com/ffuqiangg/kernel/tree/main/kernel
        KERNEL_VERSION_NAME: ${{ secrets.KERNEL_NAME }}
        KERNEL_AUTO_LATEST: ${{ secrets.KERNEL_AUTO }}
        GZIP_IMGS: .7z
        SCRIPT_S905D: mk_openwrt_n1.sh
        OPENWRT_VER: R${{ env.COMPILE_DATE }}
        SFE_FLOW: 0
        ENABLE_WIFI_K504: 0
        ENABLE_WIFI_K510: 0
        DISTRIB_REVISION: R${{ env.COMPILE_DATE }}

    - name: Generate release tag
      id: tag
      if: ${{ env.UPLOAD_RELEASE }} == 'true' && !cancelled()
      run: |
        echo "release_tag=Openwrt-$(date +"%Y.%m.%d-%H%M")" >> ${GITHUB_OUTPUT}
        touch release.txt
        echo "![](https://img.shields.io/badge/LEDE-R${{ env.COMPILE_DATE }}-informational?style=flat)" >> release.txt
        echo "- 默认IP：192.168.1.99 默认密码：password" >> release.txt
        echo "- 后缀 tar.gz 为 Openwrt 底包，后缀 7z 为完整固件。" >> release.txt
        echo "- 底包架构 arm64，源码为 [LEDE](https://github.com/coolsnowwolf/lede) 仓库，主要包含插件：Passwall，硬盘休眠，Frpc，Rclone，Alist，Filebrowser，FTP服务器，Samba4，docker-compose，cpufreq" >> release.txt
        echo "- 完整固件只适配 斐讯N1，打包脚本基于 [unifreq/openwrt_packit](https://github.com/unifreq/openwrt_packit) 修改" >> release.txt
        echo "status=success" >> ${GITHUB_OUTPUT}

    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      if: ${{ steps.tag.outputs.status }} == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: |
          ${{ env.PACKAGED_OUTPUTPATH }}/*.7z

    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 3

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.1.0
      if: ${{ env.UPLOAD_RELEASE }} == 'true' && !cancelled()
      with:
        keep_latest: 50
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

    - name: Telegram notification
      run: |
        COMPILE_DATE_VAL=$(echo ${{ steps.tag.outputs.release_tag }} | cut -d - -f 2-)
        MSG="
        ✅ *LEDE R${{ env.COMPILE_DATE }}*
        
        - 基本信息 - - - - - - - - - -
        编译时间： ${COMPILE_DATE_VAL:0:13}:${COMPILE_DATE_VAL:13}
        管理后台： 192.168.1.99
        默认密码： password
        下载地址： [release](https://github.com/ffuqiangg/build_openwrt/releases/tag/${{ steps.tag.outputs.release_tag }})
        - 主要插件 - - - - - - - - - -
         ├ Passwall
         ├ Alist
         ├ 硬盘休眠
         ├ Cpufreq
         ├ Rclone
         ├ Frpc
         ├ KMS
         ├ Samba4
         ├ FTP
         ├ Filebrowser
         └ docker-compose
        - 联系方式 - - - - - - - - - -
        \[ [Telegram](https://t.me/ffuqiangg) ]  \[ [Github](https://github.com/ffuqiangg) ]  \[ [Docker](https://hub.docker.com/u/ffuqiangg) ]
        "
        curl "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage" -d "chat_id=${{ secrets.TELEGRAM_TO }}&text=${MSG}&parse_mode=MarkDown&disable_web_page_preview=true"
