name: Build Openwrt kernel

on:
  workflow_dispatch:
    inputs:
      kernel_name:
        description: "Input kernel version"
        required: true
        default: ""
      kernel_auto:
        description: "Use last kernel?"
        required: false
        default: false
        type: boolean

env:
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
      - name: Set kernel repo
        id: setRepo
        run: |
          KERNEL_VERSION=$(echo ${{ github.event.inputs.kernel_name }} | cut -d . -f 1-2)
          FFUQIANGG_REPO='https://github.com/ffuqiangg/kernel/tree/main/kernel'
          OPHUB_REPO='https://github.com/ophub/kernel/tree/main/pub/stable'
          BREAKINGS_REPO='https://github.com/breakings/OpenWrt/tree/main/opt/kernel'
          if [[ ${{ github.event.inputs.kernel_auto }} == true ]]; then
              if [[ ${env.KERNEL_VERSION} == '5.4' ]]; then
                  echo "compile_kernel=false" >> ${GITHUB_OUTPUT} 
                  ehco "KERNEL_REPO=${FFUQIANGG_REPO}" >> ${GITHUB_ENV}
              elif [[ ${env.KERNEL_VERSION} == '5.15' ]] || [[ ${env.KERNEL_VERSION} == '6.0' ]]; then
                  echo "compile_kernel=false" >> ${GITHUB_OUTPUT} 
                  ehco "KERNEL_REPO=${OPHUB_REPO}" >> ${GITHUB_ENV}
              elif [[ ${env.KERNEL_VERSION} == '5.10' ]]; then
                  echo "compile_kernel=true" >> ${GITHUB_OUTPUT}
                  echo "rm_release=true" >> ${GITHUB_ENV} 
              fi
          else
              if [[ ${env.KERNEL_VERSION} == '5.4' ]]; then
                  if [[ $(curl -o /dev/null -s --head -w "%{http_code}" "${FFUQIANGG_REPO}/${{ github.event.inputs.kernel_name }}") == 200 ]]; then
                      echo "compile_kernel=false" >> ${GITHUB_OUTPUT} 
                      ehco "KERNEL_REPO=${FFUQIANGG_REPO}" >> ${GITHUB_ENV}
                  elif [[ $(curl -o /dev/null -s --head -w "%{http_code}" "https://github.com/ffuqiangg/amlogic-s9xxx-armbian/releases/tag/kernel_${{ github.event.inputs.kernel_name }}") == 200 ]]; then
                      echo "download_kernel=true" >> ${GITHUB_OUTPUT}
                      echo "rm_release=false" >> ${GITHUB_ENV} 
                  else
                      echo "compile_kernel=true" >> ${GITHUB_OUTPUT}
                      echo "rm_release=false" >> ${GITHUB_ENV} 
                  fi
              elif [[ ${env.KERNEL_VERSION} == '5.10' ]]; then
                  echo "compile_kernel=true" >> ${GITHUB_OUTPUT}
                  echo "rm_release=true" >> ${GITHUB_ENV} 
              elif [[ ${env.KERNEL_VERSION} == '5.15' ]] || [[ ${env.KERNEL_VERSION} == '6.0' ]]; then
                  if [[ $(curl -o /dev/null -s --head -w "%{http_code}" "${OPHUB_REPO}/${{ github.event.inputs.kernel_name }}") == 200 ]]; then
                      echo "compile_kernel=false" >> ${GITHUB_OUTPUT} 
                      ehco "KERNEL_REPO=${OPHUB_REPO}" >> ${GITHUB_ENV}
                  elif [[ $(curl -o /dev/null -s --head -w "%{http_code}" "${BREAKINGS_REPO}/${{ github.event.inputs.kernel_name }}") == 200 ]]; then
                      echo "compile_kernel=false" >> ${GITHUB_OUTPUT} 
                      ehco "KERNEL_REPO=${BREAKINGS_REPO}" >> ${GITHUB_ENV}
                  else
                      echo "compile_kernel=true" >> ${GITHUB_OUTPUT}
                      echo "rm_release=true" >> ${GITHUB_ENV} 
                  fi
              fi
          fi

      - name: Build openwrt without compile kernell
        if: steps.setRepo.outputs.compile_kernel == 'false'
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.GH_TOKEN }}
          event-type: Build-Openwrt
          client-payload: '{"kernel_name": "${{ github.event.inputs.kernel_name }}", "kernel_repo_url": "${{ env.KERNEL_REPO }}"}, "kernel_auto": "${{ github.event.inputs.kernel_auto }}"}'

      - name: Download kernel & build openwrt
        if: steps.setRepo.outputs.download_kernel == 'true'
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.KERNEL_TK }}
          event-type: Build-Openwrt
          client-payload: '{"release_tag": "kernel_${{ github.event.inputs.kernel_name }}", "auto_build": "true"}'


      - name: Compile kernel & build openwrt
        if: steps.setRepo.outputs.compile_kenel == 'true'
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.ARMBIAN_TK }}
          event-type: Compile-auto
          client-payload: '{"kernel_version": "${{ github.event.inputs.kernel_name }}", "auto_sync": "true", "kernel_auto": "${{ github.event.inputs.kernel_auto }}", "auto_build": "true", "rm_release": "${{ env.rm_release }}"}'
