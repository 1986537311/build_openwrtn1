name: Build Openwrt kernel

on:
  workflow_dispatch:
    inputs:
      kernel_name:
        description: "Select kernel version"
        required: true
        default: ""
        type: choice
        options:
          - 5.4.1
          - 5.10.1
          - 5.15.1
          - 6.0.1

env:
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
      - name: Set kernel repo
        id: setRepo
        run: |
          KERNEL_VERSION=$(echo ${{ github.event.inputs.kernel_name }} | cut -d . -f 1-2)
          FFUQIANGG_REPO='https://github.com/ffuqiangg/kernel/tree/main/kernel'
          OPHUB_REPO='https://github.com/ophub/kernel/tree/main/pub/stable'
          if [[ ${env.KERNEL_VERSION} == '5.4' ]]; then
              echo "compile_kernel=false" >> ${GITHUB_OUTPUT} 
              ehco "KERNEL_REPO=${FFUQIANGG_REPO}" >> ${GITHUB_ENV}
          elif [[ ${env.KERNEL_VERSION} == '5.15' ]] || [[ ${env.KERNEL_VERSION} == '6.0' ]]; then
              echo "compile_kernel=false" >> ${GITHUB_OUTPUT} 
              ehco "KERNEL_REPO=${OPHUB_REPO}" >> ${GITHUB_ENV}
          elif [[ ${env.KERNEL_VERSION} == '5.10' ]]; then
              echo "compile_kernel=true" >> ${GITHUB_OUTPUT}
              echo "rm_release=true" >> ${GITHUB_ENV} 
          fi

      - name: Build openwrt without compile kernell
        if: steps.setRepo.outputs.compile_kernel == 'false'
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.GH_TOKEN }}
          event-type: Build-Openwrt
          client-payload: '{"kernel_name": "${{ github.event.inputs.kernel_name }}", "kernel_repo_url": "${{ env.KERNEL_REPO }}"}, "kernel_auto": "true"}'

      - name: Compile kernel & build openwrt
        if: steps.setRepo.outputs.compile_kenel == 'true'
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.ARMBIAN_TK }}
          event-type: Compile-auto
          client-payload: '{"kernel_version": "${{ github.event.inputs.kernel_name }}", "auto_sync": "true", "kernel_auto": "true", "auto_build": "true", "rm_release": "${{ env.rm_release }}"}'
