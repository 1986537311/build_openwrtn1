name: Use Releases file to Packaging

on:
  workflow_dispatch:
    inputs:
      scripts_repo:
        description: "Select packing scripts reop"
        required: true
        default: "ophub"
        type: choicee
        options:
          - ophub
          - flippy
      release_tag:
        description: "Input Release Tag"
        required: true
        default: ""
      openwrt_kernel:
        description: "Select kernel version"
        required: false
        default: "5.10.1_5.15.1"
        type: choice
        options:
          - 5.10.1_5.15.1
          - 5.4.1
          - 5.10.1
          - 5.15.1
          - 6.1.1
      kernel_repo:
        description: "Set the kernel repository"
        required: false
        default: "ophub/kernel"
        type: choice
        options:
          - ophub/kernel
          - breakings/OpenWrt
          - ffuqiangg/amlogic-s9xxx-armbian
      kernel_usage:
        description: "Set the tags of the stable kernel (ophub)"
        required: false
        default: "flippy"
        type: choice
        options:
          - stable
          - flippy
          - dev
          - beta
      make_sh:
        description: "packing scripts (flippy)"
        required: false
        default: ""
        

env:
  TZ: America/New_York

jobs:
  build:
    runs-on: ubuntu-22.04
    if: ${{ github.event.repository.owner.id }} == ${{ github.event.sender.id }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Initialization environment
        id: init
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          [[ -n "${AGENT_TOOLSDIRECTORY}" ]] && sudo rm -rf "${AGENT_TOOLSDIRECTORY}"
          sudo rm -rf /usr/share/dotnet /etc/apt/sources.list.d /usr/local/lib/android 2>/dev/null
          sudo -E apt-get -y update
          sudo -E apt-get -y purge azure-cli ghc* zulu* llvm* firefox google* dotnet* powershell openjdk* mongodb* moby* || true
          sudo -E apt-get -y install $(curl -fsSL https://is.gd/depend_ubuntu2204_openwrt)
          sudo -E systemctl daemon-reload
          #sudo -E apt-get -y full-upgrade
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          sudo timedatectl set-timezone "${TZ}"
          echo "status=success" >> ${GITHUB_OUTPUT}

      - name: Get variable
        run: |
          rootfs_url="$(
            curl -s \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" \
              https://api.github.com/repos/ffuqiangg/build_openwrt/releases/tags/${{ inputs.release_tag }} |
              jq -r '.assets[].browser_download_url' |
              grep ".tar.gz$"
          )"
          echo "DOWNLOAD_URL=${rootfs_url}" >> ${GITHUB_ENV}
          if [[ ${{ inputs.release_tag }} == Openwrt* ]]; then
            echo "OP_DESCRIPTION=Openwrt" >> ${GITHUB_ENV}
          elif [[ ${{ inputs.release_tag }} == Immortalwrt* ]]; then
            echo "OP_DESCRIPTION=Immortalwrt" >> ${GITHUB_ENV}
          fi

      - name: Packaging OpenWrt (ophub)
        if: ${{ inputs.scripts_repo }} == 'ophub'
        uses: ophub/amlogic-s9xxx-openwrt@main
        with:
          openwrt_path: ${ env.DOWNLOAD_URL }
          openwrt_board: s905d
          openwrt_kernel: ${{ inputs.openwrt_kernel }}
          auto_kernel: true
          kernel_repo: ${{ inputs.kernel_repo }}
          kernel_usage: ${{ inputs.kernel_usage }}
          gh_token: ${{ secrets.GH_TOKEN }}

      - name: Rename files
        if: env.PACKAGED_STATUS == 'success'
        run: |
          for file in $(ls ${{ env.PACKAGED_OUTPUTPATCH }}); do
            mv $file $(echo $file | sed 's/openwrt_amlogic/immortalwrt_master/g')
          done

      - name: Package OpenWrt (flippy)
        if: ${{ inputs.scripts_repo }} == 'flippy'
        uses: ffuqiangg/openwrt_packit@master
        env:
          SCRIPT_REPO_URL: https://github.com/ffuqiangg/openwrt_packit
          OPENWRT_ARMVIRT: ${ env.DOWNLOAD_URL }
          PACKAGE_SOC: s905d
          KERNEL_REPO_URL: ${{ inputs.kernel_repo }}
          KERNEL_VERSION_NAME: ${{ inputs.openwrt_kernel }}
          KERNEL_AUTO_LATEST: true
          GZIP_IMGS: .gz
          SCRIPT_S905D: ${{ inputs.make_sh }}
          OPENWRT_VER: ${{ github.event.client_payload.compile_date }}
          SFE_FLOW: 0
          ENABLE_WIFI_K504: 0
          ENABLE_WIFI_K510: 0
          DISTRIB_REVISION: ${{ github.event.client_payload.compile_date }}
          DISTRIB_DESCRIPTION: ${ env.OP_DESCRIPTION }
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Upload the packaged OpenWrt
        uses: ncipollo/release-action@main
        if: ${{ env.PACKAGED_STATUS }} == 'success' && !cancelled()
        with:
          tag: ${{ inputs.release_tag }}
          artifacts: ${{ env.PACKAGED_OUTPUTPATH }}/*
          allowUpdates: true
          removeArtifacts: false
          replacesArtifacts: true
          token: ${{ secrets.GH_TOKEN }}
