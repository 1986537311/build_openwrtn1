name: N1-OpenWrt-ImageBuilder

on:
  workflow_dispatch:
    inputs:
      releases_branch:
        description: "Select the releases branch"
        required: false
        default: "openwrt:22.03.5"
        type: choice
        options:
          - openwrt:22.03.5
          - openwrt:21.02.7
          - openwrt:19.07.10
          - openwrt:18.06.9
      openwrt_kernel:
        description: "Select kernel version"
        required: false
        default: "5.10.1"
      auto_kernel:
        description: "Auto use the latest kernel"
        required: false
        default: true
        type: boolean
      kernel_repo:
        description: "Set the kernel repository"
        required: false
        default: "ffuqiangg/kernel_5.10.y"
        type: choice
        options:
          - ophub/kernel
          - ffuqiangg/kernel_5.10.y
      kernel_usage:
        description: "Set the tags of the stable kernel."
        required: false
        default: "beta"
        type: choice
        options:
          - stable
          - flippy
          - dev
          - beta

env:
  TZ: Asia/Shanghai
  IMAGEBUILDER_SH: config/imagebuilder/imagebuilder.sh

jobs:
  build:
    runs-on: ubuntu-22.04
    if: ${{ github.event.repository.owner.id }} == ${{ github.event.sender.id }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Initialization environment
        id: init
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          [[ -n "${AGENT_TOOLSDIRECTORY}" ]] && sudo rm -rf "${AGENT_TOOLSDIRECTORY}"
          sudo rm -rf /usr/share/dotnet /etc/apt/sources.list.d /usr/local/lib/android 2>/dev/null
          sudo -E apt-get -y update
          sudo -E apt-get -y purge azure-cli ghc* zulu* llvm* firefox google* dotnet* powershell openjdk* mongodb* moby* || true
          sudo -E apt-get -y install $(cat depends)
          sudo -E systemctl daemon-reload
          #sudo -E apt-get -y full-upgrade
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          sudo timedatectl set-timezone "${TZ}"
          echo "status=success" >> ${GITHUB_OUTPUT}

      - name: Build OpenWrt Rootfs [ ${{ inputs.releases_branch }} ]
        id: imagebuilder
        if: steps.init.outputs.status == 'success' && !cancelled()
        run: |
          RELEASES_BRANCH="${{ inputs.releases_branch }}"
          ${IMAGEBUILDER_SH} ${RELEASES_BRANCH}
          echo "RELEASES_TAG=$(echo ${RELEASES_BRANCH/:/-} | sed 's,o,O,' | sed 's,w,W,')" >> ${GITHUB_ENV}
          echo "IMAGE_NAME=${RELEASES_BRANCH/:/_}" >> ${GITHUB_ENV}
          echo "status=success" >> ${GITHUB_OUTPUT}

      - name: Clear server space
        if: steps.imagebuilder.outputs.status == 'success' && !cancelled()
        run: |
          cd openwrt/
          rm -rf $(ls . | grep -v "^bin$" | xargs) 2>/dev/null
          df -hT ${PWD}

      - name: Packaging OpenWrt
        if: steps.imagebuilder.outputs.status == 'success' && !cancelled()
        uses: ffuqiangg/amlogic-s9xxx-openwrt@main
        with:
          openwrt_path: openwrt/bin/targets/*/*/*rootfs.tar.gz
          openwrt_board: s905d
          openwrt_kernel: ${{ inputs.openwrt_kernel }}
          auto_kernel: ${{ inputs.auto_kernel }}
          kernel_repo: ${{ inputs.kernel_repo }}
          kernel_usage: ${{ inputs.kernel_usage }}
          gh_token: ${{ secrets.GH_TOKEN }}
          image_name: ${{ env.IMAGE_NAME }} 

      - name: Generate release tag
        id: tag
        if: env.PACKAGED_STATUS == 'success' && !cancelled()
        run: |
          echo "PACKAGE_DATE=$(date +'%Y.%m.%d-%H%M')" >> $GITHUB_ENV

      - name: Upload the packaged OpenWrt
        uses: ncipollo/release-action@main
        if: env.PACKAGED_STATUS == 'success' && !cancelled()
        with:
          tag: ${{ env.RELEASES_TAG }}-${{ env.PACKAGE_DATE }}
          artifacts: ${{ env.PACKAGED_OUTPUTPATH }}/*
          allowUpdates: true
          removeArtifacts: false
          replacesArtifacts: true
          token: ${{ secrets.GH_TOKEN }}
          body: |
            ![${{ env.RELEASES_TAG }}](https://img.shields.io/badge/${{ env.RELEASES_TAG }}-informational?style=flat) [![Telegram](https://img.shields.io/badge/-Telegram-413f42?style=flat&logo=telegram&logoColor=white)](https://t.me/ffuqiangg)  [![Gmail](https://img.shields.io/badge/-Gmail-red?style=flat&logo=gmail&logoColor=white)](mailto:ffuqiangg@gmail.com)  [![Docker](https://img.shields.io/badge/-Docker-informational?style=flat&logo=docker&logoColor=white)](https://hub.docker.com/u/ffuqiangg)
            - 默认IP：192.168.1.99  密码：password
            - 本固件使用 imagebuilder 生成，尚在测试不排除有影响使用的 BUG
