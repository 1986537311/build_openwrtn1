name: Build Immortalwrt18.06 k5.4

on:
  repository_dispatch:
    types:
      - Build-Immortalwrt18.06
  workflow_dispatch:

env:
  REPO_URL: https://github.com/immortalwrt/immortalwrt
  REPO_BRANCH: openwrt-18.06-k5.4
  CONFIG_FILE: immortalwrt.config
  DIY_P1_SH: immortalwrt-18.06-diy1.sh
  DIY_P2_SH: immortalwrt-18.06-diy2.sh
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Check server information
      run: |
        echo -e "💬 Server information \n"
        echo -e "💻 Server running on Ubuntu: [ Release: $(cat /etc/os-release | grep VERSION_CODENAME | cut -d '=' -f2) / Host: $(arch) ] \n"
        echo -e "🧮 Server CPU configuration information: \n$(cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c) \n"
        echo -e "💾 Server memory usage: \n$(free -h) \n"
        echo -e "🗃️ Server space usag: \n$(df -hT ${GITHUB_WORKSPACE}) \n"

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update -y
        sudo -E apt-get -qq upgrade -y
        sudo -E apt-get -qq install $(cat immortalwrt18.06_depends)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt --single-branch --depth=1
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Load custom feeds
      run: |
        chmod +x ${DIY_P1_SH}
        cd openwrt
        ${GITHUB_WORKSPACE}/${DIY_P1_SH}

    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x ${DIY_P2_SH}
        cd openwrt
        ${GITHUB_WORKSPACE}/${DIY_P2_SH}
        echo "COMPILE_DATE=$(date +%Y%m%d)" >> ${GITHUB_ENV}

    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "status=success" >> ${GITHUB_OUTPUT}
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> ${GITHUB_ENV}
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> ${GITHUB_ENV}

    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> ${GITHUB_ENV}
        echo "status=success" >> ${GITHUB_OUTPUT}

    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: Immortalwrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: Package Armvirt as Immortalwrt
      uses: ffuqiangg/openwrt_packit@master
      env:
        SCRIPT_REPO_URL: https://github.com/ffuqiangg/openwrt_packit
        OPENWRT_ARMVIRT: openwrt/bin/targets/*/*/*.tar.gz
        PACKAGE_SOC: s905d
        KERNEL_REPO_URL: https://github.com/ffuqiangg/kernel/tree/main
        KERNEL_VERSION_NAME: 5.4.200
        KERNEL_AUTO_LATEST: true
        GZIP_IMGS: .7z
        SCRIPT_S905D: mk_imm18.06_n1.sh
        OPENWRT_VER: ${{ env.COMPILE_DATE }}
        SFE_FLOW: 0
        ENABLE_WIFI_K504: 0
        ENABLE_WIFI_K510: 0
        DISTRIB_REVISION: ${{ env.COMPILE_DATE }}
        DISTRIB_DESCRIPTION: Immortalwrt

    - name: Generate release tag
      id: tag
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        echo "release_tag=Immortalwrt-$(date +"%Y.%m.%d-%H%M")" >> ${GITHUB_OUTPUT}
        cat > release.txt << EOF
        ![immortalwrt ${{ env.COMPILE_DATE }}](https://img.shields.io/badge/immortalwrt-${{ env.COMPILE_DATE }}-success?style=flat)
        
        ## 💾 基本信息
        默认IP：192.168.1.99  密码：password
        源码来自 [Immortalwrt-18.06-k5.4](https://github.com/immortalwrt/immortalwrt/tree/openwrt-18.06-k5.4)，固件只适配 斐讯N1，打包脚本基于 [unifreq/openwrt_packit](https://github.com/unifreq/openwrt_packit) 修改
        ⚠️  后缀名 7z 文件为完整固件，immortalwrt-armvirt-64-default-rootfs.tar.gz 不是完整固件无法直接用于刷机
        📝 一些修改：banner 及 sysinfo 修改，概览页调整，命令缩写，历史命令补全，vim 配置及配色调整
        
        ## 🎯 主要插件
        Passwall，硬盘休眠，Frpc，Rclone，Alist，Filebrowser，FTP服务器，Samba4，docker-compose，dockerman，cpufreq，vim
        
        ## 💬 联系方式
        [![Telegram](https://img.shields.io/badge/-Telegram-413f42?style=flat&logo=telegram&logoColor=white)](https://t.me/ffuqiangg)  [![Gmail](https://img.shields.io/badge/-Gmail-red?style=flat&logo=gmail&logoColor=white)](mailto:ffuqiangg@gmail.com)  [![Docker](https://img.shields.io/badge/-Docker-informational?style=flat&logo=docker&logoColor=white)](https://hub.docker.com/u/ffuqiangg)
        EOF
        echo "status=success" >> ${GITHUB_OUTPUT}

    - name: Upload firmware to release
      uses: ncipollo/release-action@main
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        tag: ${{ steps.tag.outputs.release_tag }}
        bodyFile: release.txt
        artifacts: |
          ${{ env.FIRMWARE }}/*.tar.gz
          ${{ env.PACKAGED_OUTPUTPATH }}/*.7z

    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@v2
      with:
        retain_days: 1
        keep_minimum_runs: 3

    - name: Remove old Releases
      uses: codesnas/delete-older-releases@main
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 50
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

    - name: Telegram notification
      run: |
        COMPILE_DATE_VAL=$(echo ${{ steps.tag.outputs.release_tag }} | cut -d - -f 2-)
        MSG="
        ✅ *Immortalwrt ${{ env.COMPILE_DATE }}*
        
        🔘 *基本信息*
        编译时间： ${COMPILE_DATE_VAL:0:13}:${COMPILE_DATE_VAL:13}
        管理后台： 192.168.1.99
        默认密码： password
        下载地址： [release](https://github.com/ffuqiangg/build_openwrt/releases/tag/${{ steps.tag.outputs.release_tag }})
        
        🎯 *主要插件*
        Passwall , frpc , Rclone , Alist , Filebrowser , docker-compose , dockerman

        💬 \[ [Telegram](https://t.me/ffuqiangg) ]  \[ [Github](https://github.com/ffuqiangg) ]  \[ [Docker](https://hub.docker.com/u/ffuqiangg) ]
        "
        curl "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage" -d "chat_id=${{ secrets.TELEGRAM_TO }}&text=${MSG}&parse_mode=MarkDown&disable_web_page_preview=true"
