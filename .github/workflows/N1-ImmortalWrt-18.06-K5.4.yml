name: N1-ImmortalWrt-18.06-K5.4

on:
  workflow_dispatch:

env:
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Show system
      run: |
        echo -e "💬 Server information \n"
        echo -e "💻 Server running on Ubuntu: [ Release: $(cat /etc/os-release | grep VERSION_CODENAME | cut -d '=' -f2) / Host: `arch` ] \n"
        echo -e "🧮 Server CPU configuration information: \n$(cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c) \n"
        echo -e "💾 Server memory usage: \n$(free -h) \n"
        echo -e "🗃️ Server space usag: \n$(df -hT ${GITHUB_WORKSPACE}) \n"

    - name: Checkout
      uses: actions/checkout@v3

    - name: Initialization environment
      id: init
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi $(docker images -q)
        [[ -n "${AGENT_TOOLSDIRECTORY}" ]] && sudo rm -rf "${AGENT_TOOLSDIRECTORY}"
        sudo rm -rf /usr/share/dotnet /etc/apt/sources.list.d /usr/local/lib/android 2>/dev/null
        sudo -E apt-get -y update
        sudo -E apt-get -y purge azure-cli* ghc* zulu* llvm* firefox google* dotnet* powershell openjdk* mongodb* moby* || true
        sudo -E apt-get -qq install $(cat depends)
        sudo -E systemctl daemon-reload
        #sudo -E apt-get -y full-upgrade
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean
        sudo timedatectl set-timezone "$TZ"
        echo "status=success" >> ${GITHUB_OUTPUT}

    - name: Prepare immortalwrt-18.06-k5.4 code
      run: |
        sudo chown -R runner:runner /home/runner/work/build_openwrt
        cp -r scripts/immortalwrt-18.06-k5.4/. ./
        /bin/bash get_ready.sh
        echo "COMPILE_DATE=$(date +%Y%m%d)" >> ${GITHUB_ENV}

    - name: Load custom configuration
      run: |
        [ -d files ] && mv files openwrt/
        [ -f init.sh ] && sed -i "s,DATE,$(date +%Y.%m.%d)," init.sh \
          && mkdir -p openwrt/files/etc/uci-defaults \
          && cp -f init.sh openwrt/files/etc/uci-defaults/999-default-settings
        cd openwrt
        cp -r ../scripts/immortalwrt-18.06-k5.4/. ./
        /bin/bash change_menu.sh
        cp ../config/immortalwrt-18.06-k5.4/config .config

    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "status=success" >> ${GITHUB_OUTPUT}

    - name: Clear server space
      id: clean
      if: steps.compile.outputs.status == 'success' && !cancelled()
      run: |
        cd openwrt/
        mkdir output
        cp -f bin/targets/*/*/*rootfs.tar.gz output/
        cp -f .config output/config
        rm -rf $(ls . | grep -v "^output$" | xargs) 2>/dev/null
        df -hT ${PWD}
        echo "status=success" >> ${GITHUB_OUTPUT}

    - name: Package Openwrt
      if: steps.clean.outputs.status == 'success'
      uses: ffuqiangg/openwrt_packit@master
      env:
        SCRIPT_REPO_URL: https://github.com/ffuqiangg/openwrt_packit
        OPENWRT_ARMVIRT: openwrt/output/*rootfs.tar.gz
        PACKAGE_SOC: s905d
        KERNEL_REPO_URL: ffuqiangg/amlogic-s9xxx-armbian
        KERNEL_VERSION_NAME: 5.4.1
        KERNEL_AUTO_LATEST: true
        GZIP_IMGS: .gz
        SCRIPT_S905D: mk_immortalwrt_18.06_k5.4_n1.sh
        OPENWRT_VER: ${{ env.COMPILE_DATE }}
        SFE_FLOW: 0
        ENABLE_WIFI_K504: 0
        ENABLE_WIFI_K510: 0
        DISTRIB_REVISION: ${{ env.COMPILE_DATE }}
        DISTRIB_DESCRIPTION: Immortalwrt

    - name: Organize output file
      if: env.PACKAGED_STATUS == 'success'
      run: |
        cp -f openwrt/output/config ${{ env.PACKAGED_OUTPUTPATH }}/
        cd ${{ env.PACKAGED_OUTPUTPAH }}
        sha256sum config > config.sha

    - name: Generate release tag
      id: tag
      if: steps.clean.outputs.status == 'success'
      run: |
        echo "release_tag=ImmortalWrt-18.06-K5.4-$(date +'%Y.%m.%d-%H%M')" >> ${GITHUB_OUTPUT}
        echo "status=success" >> ${GITHUB_OUTPUT}

    - name: Upload firmware to release
      uses: ncipollo/release-action@main
      if: steps.tag.outputs.status == 'success'
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        tag: ${{ steps.tag.outputs.release_tag }}
        bodyFile: config/immortalwrt-18.06-k5.4/release.txt
        artifacts: |
          ${{ env.PACKAGED_OUTPUTPATH }}/*

    - name: Telegram notification
      if: steps.tag.outputs.status == 'success'
      run: |
        COMPILE_DATE_VAL=$(echo ${{ steps.tag.outputs.release_tag }} | rev | cut -d - -f -2 | rev)
        MSG="
        ✅ *immortalwrt-18.06-k5.4 ${{ env.COMPILE_DATE }}*

        🔘 *基本信息*
        编译时间： ${COMPILE_DATE_VAL:0:13}:${COMPILE_DATE_VAL:13}
        管理后台： 192.168.1.99
        默认密码： password
        下载地址： [release](https://github.com/ffuqiangg/build_openwrt/releases/tag/${{ steps.tag.outputs.release_tag }})

        💬 \[ [Telegram](https://t.me/ffuqiangg) ]  \[ [Github](https://github.com/ffuqiangg) ]  \[ [Docker](https://hub.docker.com/u/ffuqiangg) ]
        "
        curl "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage" -d "chat_id=${{ secrets.TELEGRAM_TO }}&text=${MSG}&parse_mode=MarkDown&disable_web_page_preview=true"
