name: N1-ImmortalWrt-18.06-K5.4

on:
  workflow_dispatch:

env:
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Show system
      run: |
        echo -e "üí¨ Server information \n"
        echo -e "üíª Server running on Ubuntu: [ Release: $(cat /etc/os-release | grep VERSION_CODENAME | cut -d '=' -f2) / Host: `arch` ] \n"
        echo -e "üßÆ Server CPU configuration information: \n$(cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c) \n"
        echo -e "üíæ Server memory usage: \n$(free -h) \n"
        echo -e "üóÉÔ∏è Server space usag: \n$(df -hT ${GITHUB_WORKSPACE}) \n"

    - name: Checkout
      uses: actions/checkout@v3

    - name: Initialization environment
      id: init
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi $(docker images -q)
        [[ -n "${AGENT_TOOLSDIRECTORY}" ]] && sudo rm -rf "${AGENT_TOOLSDIRECTORY}"
        sudo rm -rf /usr/share/dotnet /etc/apt/sources.list.d /usr/local/lib/android 2>/dev/null
        sudo -E apt-get -y update
        sudo -E apt-get -y purge azure-cli* ghc* zulu* llvm* firefox google* dotnet* powershell openjdk* mongodb* moby* || true
        sudo -E apt-get -qq install $(cat depends)
        sudo -E systemctl daemon-reload
        #sudo -E apt-get -y full-upgrade
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean
        sudo timedatectl set-timezone "$TZ"
        echo "status=success" >> ${GITHUB_OUTPUT}

    - name: Prepare immortalwrt-18.06-k5.4
      run: |
        sudo chown -R runner:runner /home/runner/work/build_openwrt
        cp -r scripts/immortalwrt-18.06-k5.4/. ./
        /bin/bash 01_get_ready.sh

    - name: Prepare package
      run: |
        cd openwrt
        cp -r ../scripts/immortalwrt-18.06-k5.4/. ./
        /bin/bash 02_prepare_package.sh

    - name: Load custom configuration
      run: |
        cp -rf files openwrt/
        sed -i "s,DATE,$(date +%Y.%m.%d)," ./init.sh
        mkdir -p openwrt/files/etc/uci-defaults
        cp -f ./init.sh openwrt/files/etc/uci-defaults/999-default-settings

    - name: Make config
      run: |
        cd openwrt
        cp ../config/immortalwrt-18.06-k5.4/config.seed .config
        make defconfig

    - name: Get Architecture
      working-directory: ${{ github.workspace }}/openwrt
      run: |
        TARGET_DEVICE_ARCH="$(grep "^CONFIG_TARGET_.*_.*=y$" ".config" | head -n 1 | sed 's/^CONFIG_TARGET_//g' | awk -F '_' '{print $1}')"
        echo "TARGET_DEVICE_ARCH=${TARGET_DEVICE_ARCH}" >> ${GITHUB_ENV}
        echo "build_date=$(date +%Y.%m.%d)" >> ${GITHUB_ENV}

    - name: Cache
      uses: HiGarfield/cachewrtbuild@main
      with:
        mixkey: ${{ env.TARGET_DEVICE_ARCH }}
        prefix: ${{ github.workspace }}/openwrt

    - name: Download package
      id: package
      run: |
        cd openwrt
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "status=success" >> ${GITHUB_OUTPUT}

    - name: Package Openwrt
      if: steps.compile.outputs.status == 'success'
      uses: ffuqiangg/openwrt_packit@master
      env:
        SCRIPT_REPO_URL: https://github.com/ffuqiangg/openwrt_packit
        OPENWRT_ARMVIRT: openwrt/bin/targets/*/*/*rootfs.tar.gz
        PACKAGE_SOC: s905d
        KERNEL_REPO_URL: ffuqiangg/amlogic-s9xxx-armbian
        KERNEL_VERSION_NAME: 5.4.1
        KERNEL_AUTO_LATEST: true
        GZIP_IMGS: .zip
        SCRIPT_S905D: mk_immortalwrt_18.06_k5.4_n1.sh
        OPENWRT_VER: '18.06 k5.4'
        SFE_FLOW: 0
        ENABLE_WIFI_K504: 0
        ENABLE_WIFI_K510: 0
        DISTRIB_REVISION: '18.06 k5.4'
        DISTRIB_DESCRIPTION: ImmortalWrt

    - name: Upload firmware to release
      uses: ncipollo/release-action@main
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        tag: ${{ env.build_date }}
        artifacts: |
          ${{ env.PACKAGED_OUTPUTPATH }}/N1-ImmortalWrt-*.zip

    - name: Telegram notification
      run: |
        MSG="
        ‚úÖ *ImmortalWrt-18.06-K5.4* ÁºñËØëÂÆåÊàê
        ‰∏ãËΩΩÂú∞ÂùÄÔºöhttps://github.com/ffuqiangg/build_openwrt/releases/tag/${{ env.build_date }}
        "
        curl "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage" -d "chat_id=${{ secrets.TELEGRAM_TO }}&text=${MSG}&parse_mode=MarkDown&disable_web_page_preview=true"
