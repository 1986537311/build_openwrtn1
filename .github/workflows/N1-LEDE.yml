name: N1-LEDE

on:
  workflow_dispatch:
  repository_dispatch:
    types:
      - N1-LEDE

env:
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Show system
      run: |
        echo -e "üí¨ Server information \n"
        echo -e "üíª Server running on Ubuntu: [ Release: $(cat /etc/os-release | grep VERSION_CODENAME | cut -d '=' -f2) / Host: $(arch) ] \n"
        echo -e "üßÆ Server CPU configuration information: \n$(cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c) \n"
        echo -e "üíæ Server memory usage: \n$(free -h) \n"
        echo -e "üóÉÔ∏è Server space usag: \n$(df -hT ${GITHUB_WORKSPACE}) \n"

    - name: Checkout
      uses: actions/checkout@v4

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi $(docker images -q) 2>/dev/null
        [[ -n "${AGENT_TOOLSDIRECTORY}" ]] && sudo rm -rf "${AGENT_TOOLSDIRECTORY}"
        sudo rm -rf /usr/share/dotnet /etc/apt/sources.list.d /usr/local/lib/android 2>/dev/null
        sudo swapoff -a
        sudo rm -f /swapfile /mnt/swapfile
        sudo -E apt-get -y update
        sudo -E apt-get -y purge azure-cli ghc* zulu* llvm* firefox google* dotnet* powershell openjdk* mongodb* moby* || true
        sudo -E apt-get -y install $(curl -fsSL https://is.gd/depend_ubuntu2204_openwrt)
        sudo -E systemctl daemon-reload
        #sudo -E apt-get -y full-upgrade
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean
        sudo timedatectl set-timezone "${TZ}"
        echo "status=success" >> ${GITHUB_OUTPUT}

    - name: Prepare source code
      run: |
        cp -r scripts/lede/. ./
        /bin/bash 01_prepare_source_code.sh
        echo "build_date=$(date +%Y.%m.%d)" >> ${GITHUB_ENV}

    - name: Prepare package
      run: |
        cd openwrt
        cp -r ../scripts/lede/. ./
        /bin/bash 02_prepare_package.sh

    - name: Load custom configuration
      run: |
        distrib_revision=$(cat openwrt/package/lean/default-settings/files/zzz-default-settings | grep -oE "R[0-9\.]+")
        cp -rf patch/files openwrt/files
        sed -i -e "s,DATE,${{ env.build_date }}," -e "s,WRT_VERSION,LEDE ${distrib_revision}," ./openwrt/files/etc/banner
        echo "distrib_revision=${distrib_revision}" >> ${GITHUB_ENV}

    - name: Make config
      run: |
        cd openwrt
        cp ../config/lede/config.seed .config
        make defconfig

    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      id: compile
      continue-on-error: true
      run: |
        cd openwrt
        make -j$(($(nproc) + 1))

    - name: If error
      if: steps.compile.outcome == 'failure'
      run: |
        cd openwrt && make -j1 V=s

    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      with:
        name: OpenWrt_rootfs_${{ env.build_date }}
        path: openwrt/bin

    - name: Package firmware
      uses: ffuqiangg/openwrt_packit@master
      env:
        SCRIPT_REPO_URL: https://github.com/ffuqiangg/openwrt_packit
        OPENWRT_ARMVIRT: openwrt/bin/targets/*/*/*rootfs.tar.gz
        PACKAGE_SOC: s905d
        KERNEL_REPO_URL: breakings/OpenWrt
        KERNEL_VERSION_NAME: 5.15.1
        KERNEL_AUTO_LATEST: true
        GZIP_IMGS: .zip
        SCRIPT_S905D: mk_lede_n1.sh
        OPENWRT_VER: ${{ env.distrib_revision }}
        SFE_FLOW: 0
        ENABLE_WIFI_K504: 0
        ENABLE_WIFI_K510: 0
        DISTRIB_REVISION: ${{ env.distrib_revision }}
        DISTRIB_DESCRIPTION: OpenWrt
        BUILD_DATE: ${{ env.build_date }}

    - name: Upload firmware to release
      uses: ncipollo/release-action@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag: ${{ env.build_date }}
        allowUpdates: true
        replacesArtifacts: true
        artifacts: ${{ env.PACKAGED_OUTPUTPATH }}/N1-LEDE-${{ env.distrib_revision }}-${{ env.build_date }}.zip

    - name: Telegram notification
      if: github.event_name == 'repository_dispatch'
      run: |
        MSG="
        *LEDE ${{ env.distrib_revision }}* ÁºñËØëÂÆåÊàê
        [N1-LEDE-${{ env.distrib_revision }}-${{ env.build_date }}.zip](https://github.com/ffuqiangg/build\_openwrt/releases/download/${{ env.build_date }}/N1-LEDE-${{ env.distrib_revision }}-${{ env.build_date }}.zip)
        "
        curl "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage" \
          -d "chat_id=${{ secrets.TELEGRAM_TO }}&text=${MSG}&parse_mode=MarkDown&disable_web_page_preview=true"
